// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum UserRole {
  ADMIN
  USER
}

model User {
  id            String     @id @default(cuid()) @map("_id")
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole   @default(USER)
  accounts      Account[]
  propertyIds   String[]
  reviews       Json[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid()) @map("_id")
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid()) @map("_id")
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}



model Property {
  id           String         @id @default(cuid()) @map("_id")
  userId       String?        @unique
  title        String         @unique
  description  String
  checkIn      String
  checkOut     String
  location     String
  depth        Float
  width        Float
  heigth       Float
  type         String
  env          String
  imgUrls      String[]
  availability Json[]
  reviews      Json[]
}

enum BookingStatus {
  PENDING
  APPROVED
}

model Booking {
  id           String         @id @default(cuid()) @map("_id")
  propertyId   String
  userId       String
  date         String  
  price        Float
  propertyTitle String
  userName     String
  status       BookingStatus @default(PENDING)
  review       Boolean @default(false)
  discountCode String?
  location     String
  checkIn      String
  checkOut     String
}

